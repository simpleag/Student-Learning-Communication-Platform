<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zwp.slcp.sqlserver.mapper.MapUserArticlecommentMapper">
  <resultMap id="BaseResultMap" type="com.zwp.slcp.apicommon.entity.MapUserArticlecomment">
    <id column="article_comment_id" jdbcType="BIGINT" property="articleCommentId" />
    <id column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="user_approve_type" jdbcType="INTEGER" property="userApproveType" />
    <result column="create_time" jdbcType="BIGINT" property="createTime" />
    <result column="update_time" jdbcType="BIGINT" property="updateTime" />
  </resultMap>
  <sql id="Base_Column_List">
    article_comment_id, user_id, user_approve_type, create_time, update_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="com.zwp.slcp.apicommon.entity.MapUserArticlecommentKey" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from map_user_articlecomment
    where article_comment_id = #{articleCommentId,jdbcType=BIGINT}
      and user_id = #{userId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="com.zwp.slcp.apicommon.entity.MapUserArticlecommentKey">
    delete from map_user_articlecomment
    where article_comment_id = #{articleCommentId,jdbcType=BIGINT}
      and user_id = #{userId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.zwp.slcp.apicommon.entity.MapUserArticlecomment">
    insert into map_user_articlecomment (article_comment_id, user_id, user_approve_type, 
      create_time, update_time)
    values (#{articleCommentId,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, #{userApproveType,jdbcType=INTEGER}, 
      #{createTime,jdbcType=BIGINT}, #{updateTime,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" parameterType="com.zwp.slcp.apicommon.entity.MapUserArticlecomment">
    insert into map_user_articlecomment
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="articleCommentId != null">
        article_comment_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="userApproveType != null">
        user_approve_type,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="articleCommentId != null">
        #{articleCommentId,jdbcType=BIGINT},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="userApproveType != null">
        #{userApproveType,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.zwp.slcp.apicommon.entity.MapUserArticlecomment">
    update map_user_articlecomment
    <set>
      <if test="userApproveType != null">
        user_approve_type = #{userApproveType,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=BIGINT},
      </if>
    </set>
    where article_comment_id = #{articleCommentId,jdbcType=BIGINT}
      and user_id = #{userId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zwp.slcp.apicommon.entity.MapUserArticlecomment">
    update map_user_articlecomment
    set user_approve_type = #{userApproveType,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=BIGINT}
    where article_comment_id = #{articleCommentId,jdbcType=BIGINT}
      and user_id = #{userId,jdbcType=BIGINT}
  </update>
</mapper>